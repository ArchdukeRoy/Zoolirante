@model Zoolirante.ViewModels.EventListViewModel

@{
    ViewData["Title"] = "Index";

}


@if (!string.IsNullOrEmpty(Model.DefaultVM.username))
{
    <div class="w-100 bg-dark py-1 text-white d-flex justify-content-between fixed-top" style="margin-top: 70px">
        @if (Model.DefaultVM.admin == true)
        {
            <p class="mb-1 fw-light ms-3">Admin Privileges Enabled</p>
        }
        <p class="mb-1 fw-light mx-3">Welcome, @Model.DefaultVM.username</p>
    </div>
}


<div class="w-100 bg-dark py-5 text-white text-center" style="margin-top: -2px">
    <h1 class="title-fade">Our Events</h1>
</div>

<section class="container-fluid px-0 mb-4 bg-dark text-white">
    <div class="row g-0 align-items-center hero-row">

        <!-- image -->
        <div class="col-12 col-lg-7">
            <img src="@Url.Content("~/images/EventsIndex.jpg")"
                 alt="Events hero"
                 class="w-100 event-img">
        </div>

        <!-- text -->
        <div class="col-12 col-lg-5 d-flex align-items-center">
            <div class="p-4 p-md-5 text-center text-lg-start w-100">
                <h1 class="fw-bold display-5 mb-3">
                    Events at Zoolirante
                </h1>
                <p id="eventTagline" class="lead mb-0">
                    Feeding Time, Conservation Talks, and more — there’s always something happening at the zoo!
                </p>
            </div>
        </div>
    </div>
</section>

<script>document.addEventListener("DOMContentLoaded", function () {
        const taglines = [
            " Watch our tigers roar at Feeding Time!",
            " Learn about wildlife at our Conservation Talks.",
            " Go behind the scenes and discover animal care.",
            " See how animals play during Enrichment sessions.",
            " Become a Junior Zookeeper for a day!"
        ];

        let index = 0;
        const taglineElement = document.getElementById("eventTagline");
        if (!taglineElement) return;

        setInterval(() => {
            taglineElement.style.opacity = 0;
            setTimeout(() => {
                taglineElement.textContent = taglines[index];
                taglineElement.style.opacity = 1;
                index = (index + 1) % taglines.length;
            }, 800);
        }, 4000);
    });</script>


@{
    string cat = (ViewBag.Category as string) ?? "";
}


<div class="container mb-4 d-flex justify-content-end">
    <div class="filter-bar">
        <span class="filter-label">FILTER BY</span>


        <a class="filter-pill pill-gold @(string.IsNullOrEmpty(cat) ? "is-active" : "")"
           href="@Url.Action("Index", new { category = (string?)null })">
            Show All
        </a>


        <a class="filter-pill pill-blue @(cat=="Past" ? "is-active" : "")"
           href="@Url.Action("Index", new { category = "Past" })">
            Past Events
        </a>


        @*<a class="filter-pill pill-orange @(cat=="Major" ? "is-active" : "")"
               href="@Url.Action("Index", new { category = "Major" })">
                Upcoming Events
            </a>*@

        <a class="filter-pill pill-green @(cat=="Everyday" ? "is-active" : "")"
           href="@Url.Action("Index", new { category = "Everyday" })">
            Everyday
        </a>
    </div>
</div>

@if (Model.DefaultVM.admin == true)
{
    <div class="container mb-3 d-flex justify-content-end">
        <a asp-action="Create" class="btn btn-primary px-4">
            + Create Event
        </a>
    </div>
}

<div class="container">
    <div class="row g-4">
        @foreach (var item in Model.Events)
        {
            string imageUrl;

            switch (item.Name)
            {
                case "Feeding Time":
                    imageUrl = "https://d1dxs113ar9ebd.cloudfront.net/225batonrouge/2021/05/Tigerfeeding.jpg";
                    break;
                case "Conservation Talk":
                    imageUrl = Url.Content("~/Images/Zookeeper-talk.jpg");
                    break;
                case "Behind the Scenes Tour":
                    imageUrl = Url.Content("~/Images/Behindthescene.jpg");
                    break;
                case "Animal Enrichment":
                    imageUrl = Url.Content("~/Images/AnimalEnrichment.jpg");
                    break;
                case "Junior Zookeeper Experience":
                    imageUrl = Url.Content("~/Images/JuniorZookeeper.jpg");
                    break;
                default:
                    imageUrl = Url.Content("~/Images/AnimalEnrichment.jpg");
                    break;
            }

            <!--EventsList Card-->
            <div class="col-12 col-md-4">
                <div class="card h-100 shadow-sm border-0">
                    <img src="@imageUrl" alt="@item.Name" class="card-img-top" style="object-fit:cover; height:200px;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold text-dark text-uppercase" style="font-size:1.1rem;">
                            @item.Name
                        </h5>
                        <p class="card-text text-muted small">
                            @item.Description
                        </p>

                        <!--Dropdown dates-->
                        <div class="dropdown mt-auto">
                            <button class="btn btn-zoolirante dropdown-toggle"
                                    type="button"
                                    id="dropdownMenuButton_@item.EventId"
                                    data-bs-toggle="dropdown"
                                    aria-expanded="false">
                                Dates
                            </button>

                            <ul class="dropdown-menu shadow rounded-3" aria-labelledby="dropdownMenuButton_@item.EventId">
                                @foreach (var rc in Model.EventRollCalls.Where(r => r.EventId == item.EventId))
                                {
                                    if (rc.RollDate.HasValue)
                                    {
                                        <li>
                                            <a class="dropdown-item">
                                                @rc.RollDate?.ToString("dd MMM yyyy")  @rc.RollTime
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <a class="dropdown-item">
                                                Everyday @rc.RollTime
                                            </a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>

                        <!--Only Visible to admin-->
                    </div>
                    @if (Model.DefaultVM.admin == true)
                    {
                        <div class="card-footer text-end">
                            <a asp-action="Edit" asp-route-id="@item.EventId" class="btn btn-sm btn-dark radius-2">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.EventId" class="btn btn-sm btn-danger radius-2">Delete</a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>
